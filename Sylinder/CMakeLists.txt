add_executable(SylinderNear_test SylinderNear_test.cpp)
target_compile_options(SylinderNear_test PRIVATE ${OpenMP_CXX_FLAGS})
target_include_directories(SylinderNear_test PRIVATE ${PROJECT_SOURCE_DIR}
                                                     ${Trilinos_INCLUDE_DIRS})
target_link_libraries(
  SylinderNear_test PRIVATE ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES}
                            Eigen3::Eigen OpenMP::OpenMP_CXX MPI::MPI_CXX)
add_test(NAME SylidnerNear COMMAND SylinderNear_test)

# Scan through resource folder for updated files and copy if none existing or changed
file(GLOB_RECURSE resources "./Test*/*.*")
foreach(resource ${resources})
  get_filename_component(filename ${resource} NAME)
  get_filename_component(dir ${resource} DIRECTORY)
  get_filename_component(dirname ${dir} NAME)

  set(output "${CMAKE_CURRENT_BINARY_DIR}/TestCases/${dirname}/${filename}")

  add_custom_command(
    COMMENT "Moving updated resource-file '${resource}'"
    OUTPUT ${output}
    DEPENDS ${resource}
    COMMAND ${CMAKE_COMMAND} -E copy_if_different ${resource} ${output})
  add_custom_target(${dirname}_${filename} ALL DEPENDS ${resource} ${output})

endforeach()

add_test(
  NAME Confinement
  COMMAND
    sh -c "cd TestCases/Test1_Confinement/ \
    && export OMP_NUM_THREADS=2 \
    && mpirun -n 2 ../../SylinderSystem_main > Confinement.log \
    && python Verify.py")
set_tests_properties(Confinement PROPERTIES FAIL_REGULAR_EXPRESSION
                                            "[^a-z]Error;ERROR;Failed")

add_test(
  NAME MixLink
  COMMAND
    sh -c "cd TestCases/Test2_MixLink/ \
    && export OMP_NUM_THREADS=2 \
    && mpirun -n 2 ../../SylinderSystem_main > MixLink.log \
    && python Verify.py")
set_tests_properties(MixLink PROPERTIES FAIL_REGULAR_EXPRESSION
                                        "[^a-z]Error;ERROR;Failed")

add_test(
  NAME TestAPI
  COMMAND
    sh -c "cd TestCases/Test3_TestAPI/ \
    && export OMP_NUM_THREADS=1 \
    && mpirun -n 4 ../../SylinderSystem_test_api > TestAPI.log \
    && python Verify.py")
set_tests_properties(TestAPI PROPERTIES FAIL_REGULAR_EXPRESSION
                                        "[^a-z]Error;ERROR;Failed")

add_test(
  NAME StressLC
  COMMAND
    sh -c "cd TestCases/Test4_StressLC/ \
    && export OMP_NUM_THREADS=3 \
    && mpirun -n 2 ../../SylinderSystem_main > StressLC.log \
    && python StressVerify.py")
set_tests_properties(StressLC PROPERTIES FAIL_REGULAR_EXPRESSION
                                         "[^a-z]Error;ERROR;Failed")

add_test(
  NAME StressSphere
  COMMAND
    sh -c "cd TestCases/Test5_StressSphere/ \
    && export OMP_NUM_THREADS=2 \
    && mpirun -n 4 ../../SylinderSystem_main > StressSphere.log \
    && python StressVerify.py")
set_tests_properties(StressSphere PROPERTIES FAIL_REGULAR_EXPRESSION
                                             "[^a-z]Error;ERROR;Failed")
